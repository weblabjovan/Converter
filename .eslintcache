[{"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\App.tsx":"1","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\index.tsx":"2","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\MainConverterBlock.tsx":"3","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\views\\MainView.tsx":"4","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\globals\\index.tsx":"5","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\lib\\helpers.ts":"6","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\store\\index.ts":"7","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\LoaderLarge.tsx":"8","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\main\\Conversion.tsx":"9","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\main\\BaseMarker.tsx":"10","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\interfaces\\index.ts":"11","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\history\\HistoryConverterBlock.tsx":"12","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\ErrorScreen.tsx":"13"},{"size":139,"mtime":1606653351002,"results":"14","hashOfConfig":"15"},{"size":432,"mtime":1606654828467,"results":"16","hashOfConfig":"15"},{"size":786,"mtime":1606912263772,"results":"17","hashOfConfig":"15"},{"size":530,"mtime":1606903483712,"results":"18","hashOfConfig":"15"},{"size":2978,"mtime":1606903690652,"results":"19","hashOfConfig":"15"},{"size":4755,"mtime":1606854149698,"results":"20","hashOfConfig":"15"},{"size":4704,"mtime":1606912305205,"results":"21","hashOfConfig":"15"},{"size":409,"mtime":1606820677865,"results":"22","hashOfConfig":"15"},{"size":1669,"mtime":1606854494406,"results":"23","hashOfConfig":"15"},{"size":2225,"mtime":1606852246626,"results":"24","hashOfConfig":"15"},{"size":86,"mtime":1606842298946,"results":"25","hashOfConfig":"15"},{"size":3101,"mtime":1606925799191,"results":"26","hashOfConfig":"15"},{"size":657,"mtime":1606912180798,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yf65gn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\App.tsx",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\index.tsx",[],["57","58"],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\MainConverterBlock.tsx",["59"],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\views\\MainView.tsx",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\globals\\index.tsx",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\lib\\helpers.ts",["60"],"import { ILatestFetched, Period, BigObject, ICurrencyBenchmark } from '../interfaces/';\r\nimport { LatestType, CurrencyType, RatesType, CurrencyListType, CurrencyIndexType, HistoryCurrencyType } from '../store';\r\n\r\nexport const setLatest = (latest: ILatestFetched): LatestType => {\r\n  const arr = [];\r\n  \r\n  let key: string;\r\n  for(key in latest.rates){\r\n    const obj: CurrencyType = { currency: key, value: latest.rates[key] as number}\r\n    arr.push(obj);\r\n  }\r\n\r\n  const res: LatestType = {\r\n    rates: bubbleSort(arr, \"currency\", \"ASC\") as RatesType,\r\n    base: latest.base,\r\n    date: latest.date\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nexport const setCurrencyList = (rates: RatesType): CurrencyListType => {\r\n  let eurPresent = false;\r\n  const res = [];\r\n\r\n  for(let key in rates){\r\n    if(key as string === \"EUR\"){\r\n      eurPresent = true;\r\n    }\r\n    res.push(key as string);\r\n  }\r\n\r\n  !eurPresent && res.push(\"EUR\");\r\n\r\n  return bubbleSort(res, \"\", \"ASC\") as CurrencyListType;\r\n}\r\n\r\nexport const setCurrencyIndex = (rates: RatesType): CurrencyIndexType => {\r\n  let obj = {};\r\n\r\n  for (let index = 0; index < rates.length; index++) {\r\n    const x = rates[index]['currency'];\r\n    obj = {...obj, [x]: index };\r\n  }\r\n\r\n  return obj as CurrencyIndexType;\r\n}\r\n\r\nexport const binarySearch = <T>(arr: Array<any>, fieldName: string, searchable: T): any => { \r\n  let start=0;\r\n  let end =arr.length-1; \r\n\r\n  while (start<=end){ \r\n      let mid=Math.floor((start + end)/2); \r\n \r\n      if (arr[mid][fieldName] === searchable){\r\n        return arr[mid]; \r\n      }else if (arr[mid][fieldName] < searchable){\r\n        start = mid + 1;\r\n      }else{\r\n        end = mid - 1;\r\n      }       \r\n  } \r\n \r\n  return null; \r\n}\r\n\r\nexport const bubbleSort = (a: Array<any>, b: string, d: string): Array<any> => {\r\n  \r\n  var swapp;\r\n    var n = a.length-1;\r\n    var x=a;\r\n    do {\r\n        swapp = false;\r\n        for (var i=0; i < n; i++)\r\n        {\r\n          const condition = d === \"DESC\" && b ? x[i][b] < x[i+1][b] : d === \"DESC\" && !b ? x[i] < x[i+1] : d === \"ASC\" && b ? x[i][b] > x[i+1][b] : x[i] > x[i+1];\r\n            if (condition)\r\n            {\r\n              var temp = x[i];\r\n              x[i] = x[i+1];\r\n              x[i+1] = temp;\r\n              swapp = true;\r\n            }\r\n        }\r\n        n--;\r\n    } while (swapp);\r\n\r\n  return x; \r\n}\r\n\r\nexport const bubbleSortDate = (a: Array<any>, b: string, d: string): Array<any> => {\r\n\r\n  const dateThis = (date: string): Date => {\r\n    const d = new Date(date);\r\n    return d;\r\n  }\r\n  \r\n  var swapp;\r\n    var n = a.length-1;\r\n    var x=a;\r\n    do {\r\n        swapp = false;\r\n        for (var i=0; i < n; i++)\r\n        {\r\n          const condition = d === \"DESC\" && b ? dateThis(x[i][b]) < dateThis(x[i+1][b]) : d === \"DESC\" && !b ? dateThis(x[i]) < dateThis(x[i+1]) : d === \"ASC\" && b ? dateThis(x[i][b]) > dateThis(x[i+1][b]) : dateThis(x[i]) > dateThis(x[i+1]);\r\n            if (condition)\r\n            {\r\n              var temp = x[i];\r\n              x[i] = x[i+1];\r\n              x[i+1] = temp;\r\n              swapp = true;\r\n            }\r\n        }\r\n        n--;\r\n    } while (swapp);\r\n\r\n  return x; \r\n}\r\n\r\nexport const getDateInPast = (ref: keyof Period): string => {\r\n  const map: Period = { \"Now\": 0, \"Week\": 7, \"Month\": 30, \"Half\": 188, \"Year\": 365 };\r\n  const date = new Date(Date.now() -  map[ref] * 24 * 60 * 60 * 1000);\r\n  return formatDate(date);\r\n  \r\n}\r\n\r\nconst formatDate = (date: Date) => {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) \r\n      month = '0' + month;\r\n  if (day.length < 2) \r\n      day = '0' + day;\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nlet bigObject: BigObject<object> = {}\r\n\r\n\r\nexport const setHistoryDataObject = (data: any): Array<HistoryCurrencyType> => {\r\n  const arr: Array<HistoryCurrencyType> = [];\r\n  let bigObject: BigObject<object> = data;\r\n\r\n  Object.keys(bigObject).forEach(key => {\r\n    const currency: string = Object.keys(data[key])[0];\r\n    arr.push({name: key, value: data[key][currency]})\r\n  });\r\n\r\n  return bubbleSortDate(arr, \"name\", \"ASC\") as Array<HistoryCurrencyType>;\r\n}\r\n\r\nexport const getCurrencyBenchmarks = (rates: Array<HistoryCurrencyType>): ICurrencyBenchmark => {\r\n  const obj = { start: rates.length ? rates[0].value : 0, end: rates.length ? rates[rates.length - 1].value : 0, highest: 0, lowest: 100000};\r\n\r\n  if (rates.length) {\r\n    for (let index = 0; index < rates.length; index++) {\r\n      if (rates[index].value < obj.lowest) {\r\n        obj.lowest = rates[index].value;\r\n      }\r\n      \r\n      if (rates[index].value > obj.highest) {\r\n        obj.highest = rates[index].value;\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return obj;\r\n}\r\n","C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\store\\index.ts",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\LoaderLarge.tsx",[],["61","62"],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\main\\Conversion.tsx",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\main\\BaseMarker.tsx",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\interfaces\\index.ts",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\history\\HistoryConverterBlock.tsx",[],"C:\\Users\\user\\Desktop\\React_Task\\Currency converter\\converter\\src\\components\\ErrorScreen.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":17,"column":6,"nodeType":"69","endLine":17,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":142,"column":5,"nodeType":"73","messageId":"74","endLine":142,"endColumn":33},{"ruleId":"63","replacedBy":"75"},{"ruleId":"65","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["79"],"@typescript-eslint/no-unused-vars","'bigObject' is assigned a value but never used.","Identifier","unusedVar",["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [store]",{"range":"82","text":"83"},[522,524],"[store]"]